[{"/var/www/html/study/react/assignments/specex/src/App.js":"1","/var/www/html/study/react/assignments/specex/src/Filters.js":"2","/var/www/html/study/react/assignments/specex/src/index.js":"3","/var/www/html/study/react/assignments/specex/src/redux/LaunchReducers.js":"4","/var/www/html/study/react/assignments/specex/src/Launches.js":"5","/var/www/html/study/react/assignments/specex/src/redux/store.js":"6","/var/www/html/study/react/assignments/specex/src/redux/RootSaga.js":"7"},{"size":461,"mtime":1606480809133,"results":"8","hashOfConfig":"9"},{"size":6260,"mtime":1606483752992,"results":"10","hashOfConfig":"9"},{"size":534,"mtime":1606457085957,"results":"11","hashOfConfig":"9"},{"size":462,"mtime":1606484018210,"results":"12","hashOfConfig":"9"},{"size":2106,"mtime":1606484316129,"results":"13","hashOfConfig":"9"},{"size":403,"mtime":1606459651759,"results":"14","hashOfConfig":"9"},{"size":1163,"mtime":1606483947942,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"1kwc79r",{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/www/html/study/react/assignments/specex/src/App.js",["33"],"import { useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport Filters from './Filters';\nimport Launches from './Launches';\n\nfunction App() {\n  \treturn (\n\t\t<div className=\"container bootdey\">\n\t\t\t<BrowserRouter>\n\t\t\t\t<div className=\"col-md-12\"><h1>SpeceX</h1></div>\n\t\t\t\t<Filters/>\n\t\t\t\t<Launches/>\n\t\t\t</BrowserRouter>\n\t\t\t<div className=\"col-md-12\">Developed by Ganesh Patil</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n",["34","35"],"/var/www/html/study/react/assignments/specex/src/Filters.js",["36","37","38","39","40"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport queryString from 'query-string';\n\nclass Filters extends React.Component{\n    \n    constructor(){\n        super();\n        this.state = {\n            filter:{\n                launch_year: null,\n                launch_success: null,\n                land_success: null,\n            }\n        }\n\n    }\n\n    componentDidUpdate(){\n        this.props.dispatch({\n            'type': 'filterLaunches',\n            payload: { filter: this.state.filter}\n        })\n    }\n    \n    componentDidMount(){\n        let params = queryString.parse(this.props.location.search);\n        let filter = {\n            launch_year: (params.launch_year) ? params.launch_year : null,\n            launch_success: (params.launch_success) ? params.launch_success : null,\n            land_success: (params.land_success) ? params.land_success : null,\n        }\n        this.setState({\n            filter: filter\n        });\n    }\n\n    changeFilterHandler = (event) => {\n\n        let filter = {...this.state.filter};\n        filter[event.target.name] = event.target.value\n        this.setState({\n            filter:filter\n        });\n\n        let params = [];\n        for (const key in filter) {\n            if(filter[key]){\n                params.push(`${key}=${filter[key]}`);\n            }\n        }\n\n        this.props.history.push('/?'+params.join('&'));\n        \n\n    }\n\n    resetForm = (event) => {\n        let filter = {\n            launch_year: null,\n            launch_success: null,\n            land_success: null,\n        }\n\n        this.setState({\n            filter: filter\n        })\n        /* this.props.dispatch({\n            'type': 'filterLaunches',\n            payload: { filter: filter}\n        }) */\n        this.props.history.push('/');\n    }\n\n    render(){\n        let selectYear = [];\n        for(let i=2006; i<= 2020; i++){\n            selectYear.push(i);\n        }\n\n        \n        return (\n            <div className=\"col-md-3\">\n\t\t\t\t\n\t\t\t\t<section className=\"panel\">\n\t\t\t\t\t<header className=\"panel-heading\">Filter</header>\n\t\t\t\t\t<div className=\"panel-body\">\n\t\t\t\t\t\t<form role=\"form product-form\">\n                            \n                            <div>\n                                <h5>Launch Year</h5>\n                                <select\n                                    name=\"launch_year\"\n                                    className=\"form-control\"\n                                    onChange={this.changeFilterHandler}\n                                    value={(this.state.filter.launch_year) ? this.state.filter.launch_year : ''}\n                                    \n                                >\n                                    <option value=''>Select year</option>\n                                    {\n                                        selectYear.map((year,index)=>{\n                                            return (<option key={index} value={year}>{year}</option>)\n                                    \n                                        })\n                                    }\n                                </select>\n                            </div>\n\n\n                            <div>\n                                <h5>Successful Launch</h5>\t\n                                <div className=\"radio\">\n                                    <label>\n                                        <input \n                                            checked={this.state.filter.launch_success == \"true\"}\n                                            type=\"radio\"\n                                            name=\"launch_success\"\n                                            value=\"true\"\n                                            onChange={this.changeFilterHandler}\n                                        />True \n                                    </label>\n                                </div>\n\n                                <div className=\"radio\">\n                                    <label>\n                                        <input \n                                            checked={this.state.filter.launch_success == \"false\"}\n                                            type=\"radio\"\n                                            name=\"launch_success\"\n                                            value=\"false\"\n                                            onChange={this.changeFilterHandler}\n                                        />False \n                                    </label>\n                                </div>\n                            </div>\n\n                            <div>\n                                <h5>Successful Land</h5>\t\n                                <div className=\"radio\">\n                                    <label>\n                                        <input\n                                            checked={this.state.filter.land_success == \"true\"} \n                                            type=\"radio\" \n                                            name=\"land_success\" \n                                            value=\"true\" \n                                            onChange={this.changeFilterHandler}\n                                        />True \n                                    </label>\n                                </div>\n\n                                <div className=\"radio\">\n                                    <label>\n                                        <input\n                                            checked={this.state.filter.land_success == \"false\"} \n                                            type=\"radio\" \n                                            name=\"land_success\" \n                                            value=\"false\" \n                                            onChange={this.changeFilterHandler}\n                                        />False \n                                    </label>\n                                </div>\n                            </div>\n\n                            <button className=\"btn btn-danger\" type='reset' onClick={this.resetForm}>Reset</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</div>\n        );\n    }\n}\n\nexport default connect()(withRouter(Filters));","/var/www/html/study/react/assignments/specex/src/index.js",["41"],"/var/www/html/study/react/assignments/specex/src/redux/LaunchReducers.js",[],"/var/www/html/study/react/assignments/specex/src/Launches.js",["42","43","44"],"/var/www/html/study/react/assignments/specex/src/redux/store.js",[],"/var/www/html/study/react/assignments/specex/src/redux/RootSaga.js",[],{"ruleId":"45","severity":1,"message":"46","line":1,"column":10,"nodeType":"47","messageId":"48","endLine":1,"endColumn":18},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":89,"column":13,"nodeType":"55","endLine":89,"endColumn":37},{"ruleId":"56","severity":1,"message":"57","line":116,"column":87,"nodeType":"58","messageId":"59","endLine":116,"endColumn":89},{"ruleId":"56","severity":1,"message":"57","line":128,"column":87,"nodeType":"58","messageId":"59","endLine":128,"endColumn":89},{"ruleId":"56","severity":1,"message":"57","line":143,"column":85,"nodeType":"58","messageId":"59","endLine":143,"endColumn":87},{"ruleId":"56","severity":1,"message":"57","line":155,"column":85,"nodeType":"58","messageId":"59","endLine":155,"endColumn":87},{"ruleId":null,"fatal":true,"severity":2,"message":"60","line":10,"column":19},{"ruleId":"45","severity":1,"message":"61","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":13},{"ruleId":"62","severity":1,"message":"63","line":6,"column":5,"nodeType":"64","messageId":"65","endLine":8,"endColumn":6},{"ruleId":"66","severity":1,"message":"67","line":28,"column":37,"nodeType":"68","endLine":28,"endColumn":71},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["69"],"no-negated-in-lhs",["70"],"jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Parsing error: JSX attributes must only be assigned a non-empty expression\n\n   8 | \n   9 | ReactDOM.render(\n> 10 |   <Provider store={}>\n     |                   ^\n  11 |     <App />\n  12 |   </Provider>,\n  13 |   document.getElementById('root')","'axios' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]